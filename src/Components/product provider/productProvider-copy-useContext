import React, { useContext, useReducer, useState } from "react";

const ProductContext = React.createContext();
const ProductContextDispatcher = React.createContext();

export const useProduct = () => useContext(ProductContext);
export const useProductAction = () => {
  const products = useContext(ProductContext);
  const setProduct = useContext(ProductContextDispatcher);
  const deletHandler = (id) => {
    // console.log(id);
    const filteredProduct = products.filter((p) => p.id !== id);
    // console.log(filteredProduct);
    console.log(products);
    setProduct(filteredProduct);
  };

  const incrementHandler = (id) => {
    const index = products.findIndex((p) => p.id === id);
    // console.log(index);
    const product = { ...products[index] };
    product.quantity++;
    // updateProduct : in hamoon clone az state hastesh esmesh o in gozashtam
    const updateProducts = [...products];
    updateProducts[index] = product;
    // console.log(product);
    setProduct(updateProducts)
  };

  const decrementHandler = (id) => {
    const index = products.findIndex((item) => item.id === id);
    // console.log(index);

    const product = { ...products[index] };
    if (product.quantity === 1) {
      const selectItem = products.filter((p) => p.id !== id);
      setProduct(selectItem);
    } else {
      const updateProducts = [...products];
      product.quantity--;
      updateProducts[index] = product;
      setProduct(updateProducts);
    }
  };

  const changeHandler = (e, id) => {
    // console.log(e.target.value);
    const index = products.findIndex((p) => p.id === id);
    // console.log(index);

    const product = { ...products[index] };
    product.title = e.target.value;
    const updateProducts = [...products];
    updateProducts[index] = product;
    setProduct(updateProducts);
  };
  return {
    changeHandler,
    incrementHandler,
    decrementHandler,
    deletHandler,
  };
};

const ProductProvider = ({ children }) => {
  const [products, setProduct] = useState([
    { title: "react", price: "99$", id: 1, quantity: 1 },
    { title: "Node js", price: "88$", id: 2, quantity: 2 },
    { title: "Java Script", price: "77$", id: 3, quantity: 3 },
  ]);

  return (
    <ProductContext.Provider value={products}>
      <ProductContextDispatcher.Provider value={setProduct}>
        {children}
      </ProductContextDispatcher.Provider>
    </ProductContext.Provider>
  );
};
export default ProductProvider;
